# Read input from GIT
gitout=( ${(f)"$( git -C "$repo_root_dir" diff --name-only 2>/dev/null )"} )

# Start output: nonselectable HEADER
gitout2=( "${CMDR_RED}'Modified files of ${CMDR_RED_E}${CMDR_GREEN}${(q)repo_root_dir:t}${CMDR_GREEN_E}${CMDR_RED}'${CMDR_RED_E}" )
LINE_COUNT+=1
ZCMDRLIST_NONSELECTABLE_ELEMENTS+=( "$LINE_COUNT" )
ZCMDRLIST_HOP_INDEXES+=( "$LINE_COUNT" )

# Get zstat's at corresponding array's entries
local -a stat_result
local mtime
if [[ "${ZCMDR[stat_available]}" = "1" && "${#gitout}" != "0" ]]; then
    stat_result=( ${(f)"$( zstat "${repo_root_dir}/${^gitout[@]}" )"} )
    stat_result=( "${(M)stat_result[@]:#mtime*}" )
    stat_result=( "${stat_result[@]/mtime[^0-9]#/}" )
fi

size=${#gitout[@]}
for (( idx = 1; idx <= size; idx ++ )); do
    entry="${gitout[idx]}"
    mtime="${stat_result[idx]}"

    reply=()

    # Time spec
    __zcmdr_stdlib_get_timestamp
    integer days=$(( (REPLY-mtime)/(24*60*60) ))
    local day_info
    (( days > 0 )) && day_info="${days}_day(s)" || day_info="today"
    day_info="${CMDR_CYAN}${day_info}${CMDR_CYAN_E}"
    day_info="${(r:12:: :)day_info}"
    [[ "${day_info/${CMDR_CYAN_E}/}" = "$day_info" ]] && day_info="${day_info}${CMDR_CYAN_E}"

    # Main (std) button text
    local txtentry="${entry:t}"
    txtentry="${txtentry//\%/%%}"
    txtentry='%35<...<'"$txtentry"
    txtentry="$ACC_YELLOW${(%)txtentry}$ACC_YELLOW_E"
    txtentry="${(r:40:: :)txtentry}"

    # Button function arguments:
    # $1 - action ID
    # $2 - data1, e.g. timestamp
    # $3 - data2, e.g. command
    # $4 - data3, e.g. active path
    # $5 - data4, e.g. file path, file name, URL, other data
    # $6 - text
    # $7 - handler function name
    if [ "$cd_at_edit" = "yes" ]; then
        __zcmdr_stdlib_get_std_button "mod1A" "$mtime" "$selected_editor" "$repo_root_dir" "$entry" "$day_info" __zcmdr_action_edit_file_cd
        __zcmdr_stdlib_get_std_button "mod1B" "$mtime" "$selected_editor" "$repo_root_dir" "$entry" "$txtentry" __zcmdr_action_edit_file_cd
    else
        __zcmdr_stdlib_get_std_button "mod1A" "$mtime" "$selected_editor" "$repo_root_dir" "$entry" "$day_info" __zcmdr_action_edit_file_abs
        __zcmdr_stdlib_get_std_button "mod1B" "$mtime" "$selected_editor" "$repo_root_dir" "$entry" "$txtentry" __zcmdr_action_edit_file_abs
    fi

    __zcmdr_stdlib_get_button "mod1C" "$mtime" "/Diff/" "$repo_root_dir" "$entry" "Diff" __zcmdr_action_git_diff_file_abs
    __zcmdr_stdlib_get_button "mod1D" "$mtime" "/FileCD/" "$repo_root_dir" "$entry" "FileCD" __zcmdr_action_file_cd
    __zcmdr_stdlib_get_button "mod1E" "$mtime" "/Backup/" "$repo_root_dir" "$entry" "Backup" __zcmdr_action_backup
    __zcmdr_stdlib_get_button "mod1F" "$mtime" "/History/" "$repo_root_dir" "$entry" "History" __zcmdr_action_git_history
    __zcmdr_stdlib_get_button "mod1G" "$mtime" "/Accumulated History/" "$repo_root_dir" "$entry" "AHistory" __zcmdr_action_git_ahistory
    __zcmdr_stdlib_get_button "mod1H" "$mtime" "/git hash-object/" "$repo_root_dir" "$entry" "StoreAsObject" __zcmdr_action_git_store_as_object

    gitout2+=( "${reply[1]} ${reply[2]} ${reply[3]} ${reply[4]} ${reply[5]} ${reply[6]} ${reply[7]} ${reply[8]}" )
    LINE_COUNT+=${#reply[@]}
done

OUTPUT+=( "${gitout2[@]}" )

# vim:ft=zsh
