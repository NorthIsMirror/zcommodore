#
# $1 - repository path
# $2 - file path
# $3 - file name
#
cmdr_ahistory() {
    if [[ "$1" = "-h" || "$#" = "0" ]]; then
        print "Shows accumulated history for given file"
        print
        print "${fg_bold[green]}Usage:${reset_color} cmdr_ahistory <repo path> <file path> <file name>"
        print
        print "${fg_bold[green]}Example run:${reset_color}"
        print "cmdr_ahistory . . myctags/entry.c"
        print "or:"
        print "cmdr_ahistory . myctags entry.c"
        return 0
    fi

    local repo_path="$1" file_path="$2" file_name="$3"
    local -a revs
    revs=( ${(f)"$( git -C "$repo_path" rev-list --all ${(q)file_path}/${(q)file_name} 2>/dev/null )"} )

    local pager_cmd
    zstyle -s ":plugin:zcommodore" pager_cmd pager_cmd || pager_cmd="less -iR"

    integer idx size="${#revs[@]}"
    for (( idx = 2; idx <= size; idx ++ )); do
        print "${fg[yellow]}commit ${revs[1]}${reset_color}"
        print "${fg[yellow]}commit ${revs[idx]}${reset_color}"

        git -C "$repo_path" diff --color "${revs[idx]}" "${revs[1]}" -- ${(q)file_path}/${(q)file_name}
        print
    done | ${=pager_cmd}
}

#
# $1 - repository path
# $2 - file path
# $3 - file name
#
cmdr_store_as_object() {
    if [[ "$1" = "-h" || "$#" = "0" ]]; then
        print "Stores given file as BLOB into Git repository. SHA hash"
        print "is generated so that you can retrieve the file with:"
        print "    git cat-file -p <SHA>"
        print "The SHA is appended to stored_objects.lst. The BLOB will"
        print "be removed by regular Git garbage collecting, as it is"
        print "unreferenced, after 14 days (default), if git gc will be"
        print "run."
        print
        print "${fg_bold[green]}Usage:${reset_color} cmdr_store_as_object <repo path> <file path> <file name>"
        print
        print "${fg_bold[green]}Example run:${reset_color}"
        print "cmdr_store_as_object . . myctags/entry.c"
        print "or:"
        print "cmdr_store_as_object . myctags entry.c"
        return 0
    fi

    local repo_path="$1" file_path="$2" file_name="$3"

    local sha=$( git -C "$repo_path" hash-object -w "$file_path/$file_name" )

    __zcmdr_stdlib_get_date_and_time_string

    echo "$sha $REPLY ${(q)file_name}" >>! "$repo_path/stored_objects.lst"
    echo "Created BLOB for \`$file_name': ${fg_bold[green]}$sha${reset_color}"
    echo "Saved this SHA into stored_objects.lst"
    echo "To retrieve the file run: git cat-file -p $sha"
}

#
# Creates backup directory.
# Echoes it when no "-s" option
#

cmdr_bdir() {
    if [[ "$1" = "-h" ]]; then
        print "Creates backup directory according to Zstyle setting:"
        print "zstyle \":plugin:zcommodore\" backup_dir {path}"
        return 0
    fi

    zstyle -s ":plugin:zcommodore" backup_dir dest || dest="$HOME/.backup"

    integer existed=0
    [[ -d "$dest" ]] && existed=1 || mkdir -p "$dest"

    [[ "$1" != "-s" && "$existed" -eq "0" ]] && print "Created backup directory: $dest"
    [[ "$1" != "-s" && "$existed" -eq "1" ]] && print "Backup directory exists: $dest"
}




ZCMDR[cmdline_sourced]="1"

# vim:ft=zsh
